from Cryptodome.Util.number import long_to_bytes, inverse

key = 143040129594128866998486308341779985335958711154736933558724836814333574073649440422975853088683512778993584078533654582708864459787138362862571444005037775085480137161862028157656261130398505094243747403469789239323063207827758539455106756461883311734290770372633944566834475217650101101364904534604434168945653425880902500443799074832355554111523938199878029775445986751562154667319659229766997388741673442617343527108674239187099116124720873518730615084396416965925519453847440250223085854596382410219494111894120719929264307198889779271662076855580791991109711080619628018137939425591387299586874
p_key = 143040129594128866998486308341779985335958711154736933558724836814333574073649440422975853088683512778993584078533654582708864459787138362862571444005037775085480137161862028157656261130398505094243747403469789239323063207827758539455106756461883311734290770372633944566834475217650101101364904534605237378309560094480183292597621067755320519257806291719065772548381666173391937898851603107991462774415928592087236828626801444257520509944965015340178560490325785103972288289538641194978136591214647644936016852834271545942140893704155223912641231825192693790165822270469905713432358071539887067344429
q_key = 143040129594128866998486308341779985335958711154736933558724836814333574073649440422975853088683512778993584078533654582708864459787138362862571444005037775085480137161862028157656261130398505094243747403469789239323063207827758539455106756461883311734290770372633944566834475217650101101364904534606377037596587257229829551235800024670140548524253803988568998273773260936665057524748970214370504545359749610460755302503281836831358723550330260687730670669264754543496656014408760120312896462293550069887337753947098202766143942043274254517878019696246653720199748781522862020509778981693470000007935
e_key = 143040129594128866998486308341779985335958711154736933558724836814333574073649440422975853088683512778993584078533654582708864459787138362862571444005037775085480137161862028157656261130398505094243747403469789239323063207827758539455106756461883311734290770372633944566834475217650101101364904534604434168945653425880902500443799074832355554111523938199878029775445986751562154667319659229766997388741673442617343527108674239187099116124720873518730615084396416965925519453847440250223085854596382410219494111894120719929264307198889779271662076855580791991109711080619628018137939425591387299521339
c_key = 1142806683857942316407152866419695539157366806666969319604203354923536481934749774343370042898865266794184064839562191579229651088022894300366591955461223290884483164662493514004300819930790279898978908572504993074570612396641563601610642544757217151283853796898157309460431198558878460260927971288274
e = e_key ^ key
p = p_key ^ key
q = q_key ^ key
c = c_key ^ key
n = p * q
phi = (p - 1) * (q - 1)
d = inverse(e, phi)
res = pow(c, d, n)
print(long_to_bytes(res))
# key_mas = [key_1, key_2, key_3, key_4, key_5]

# n = p_key*q_key
# key = (p ^ q) ^ c
# print(key==p_key)
# print(p_key==q_key)
# print(long_to_bytes(key))
# print(long_to_bytes(p_key))
# print(long_to_bytes(q_key))
# print(long_to_bytes(e_key))
# print(long_to_bytes(c_key))

# key2 = (p_key ^ q_key) ^ c_key
# # print(key - key2)
# # print(p_key ^ q_key ^ e_key == key ^ c_key)
#
# print(p_key ^ q_key == c_key)
#
# # print(p_key ^ q_key ^ e_key == key)
# print(e_key == p_key ^ q_key ^ c_key)
# print(long_to_bytes((c_key ^ key)))
#
# print(long_to_bytes(key^p_key))
# print(long_to_bytes(key^p_key^q_key))
# print(long_to_bytes(key^p_key^q_key^e_key))
# print(long_to_bytes(key^p_key^q_key^e_key^c_key))


for i_1 in range(0,5):
    for i_2 in key_mas:
        print(long_to_bytes(i_1 ^ i_2))
        if b'FLAG' in long_to_bytes(i_1 ^ i_2):
            print('ctf')
            exit()
        for i_3 in key_mas:
            print(long_to_bytes(i_1 ^ i_2 ^ i_3))
            if b'FLAG' in long_to_bytes(i_1 ^ i_2 ^ i_3):
                print('ctf')
                exit()
            for i_4 in key_mas:
                print(long_to_bytes(i_1 ^ i_2 ^ i_3 ^ i_4))
                if b'FLAG' in long_to_bytes(i_1 ^ i_2 ^ i_3 ^ i_4):
                    print('ctf')
                    exit()
                for i_5 in key_mas:
                    if i_1 != i_2 != i_3 != i_4 != i_5:
                        print(long_to_bytes(i_1 ^ i_2 ^ i_3 ^ i_4 ^ i_5))
                        if b'FLAG' in long_to_bytes(i_1 ^ i_2 ^ i_3 ^ i_4 ^ i_5):
                            print('ctf')
                            exit()
